openapi: 3.0.0
info:
  title: Wrather, Sunset, Sunrise API
  description: |
    This is a sample Weather server.
  termsOfService: http://swagger.io/terms/
  contact:
    email: fabiosantos673@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/FabioTomaz/Weather/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://localhost:4201
  description: Weather API
tags:
- name: city
  description: Operations about cities
paths:
  /cities:
    get:
      tags:
      - city
      summary: Get city by city name
      operationId: getCitiesWeather
      parameters:
      - name: sortBy
        in: query
        description: The name of the property to sort
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: temperature
      - name: sortOrder
        in: query
        description: The sorting order ("asc" or "desc")
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: asc
      - name: cities
        in: query
        description: The numbers of items to return
        required: false
        style: form
        explode: true
        schema:
          minItems: 3
          type: array
          example:
          - Aveiro
          - London
          - New York
          items:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityArray'
        "400":
          description: Invalid city supplied
        "404":
          description: City not found
      x-swagger-router-controller: City
  /cities/{cityName}:
    get:
      tags:
      - city
      summary: Get city by city name
      operationId: getCityByName
      parameters:
      - name: cityName
        in: path
        description: The name that needs to be fetched. Use Aveiro for testing.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
        "400":
          description: Invalid city supplied
        "404":
          description: City not found
      x-swagger-router-controller: City
components:
  schemas:
    City:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cityName:
          type: string
        temperature:
          type: string
        sunset:
          type: string
        sunrise:
          type: string
      example:
        sunrise: sunrise
        cityName: cityName
        sunset: sunset
        temperature: temperature
        id: 0
    CityArray:
      type: array
      description: List of city object
      items:
        $ref: '#/components/schemas/City'
